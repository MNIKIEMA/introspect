(()=>{var t={3184:t=>{var e,r,n,o=t.exports={};function i(){throw Error("setTimeout has not been defined")}function a(){throw Error("clearTimeout has not been defined")}function c(t){if(e===setTimeout)return setTimeout(t,0);if((e===i||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(r){try{return e.call(null,t,0)}catch(r){return e.call(this,t,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:i}catch(t){e=i}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(t){r=a}}();var s=[],u=!1,l=-1;function f(){u&&n&&(u=!1,n.length?s=n.concat(s):l=-1,s.length&&h())}function h(){if(!u){var t=c(f);u=!0;for(var e=s.length;e;){for(n=s,s=[];++l<e;)n&&n[l].run();l=-1,e=s.length}n=null,u=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function p(t,e){this.fun=t,this.array=e}function d(){}o.nextTick=function(t){var e=Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];s.push(new p(t,e)),1!==s.length||u||c(h)},p.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=d,o.addListener=d,o.once=d,o.off=d,o.removeListener=d,o.removeAllListeners=d,o.emit=d,o.prependListener=d,o.prependOnceListener=d,o.listeners=function(t){return[]},o.binding=function(t){throw Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(t){throw Error("process.chdir is not supported")},o.umask=function(){return 0}}},e={};(()=>{"use strict";var r=function r(n){var o=e[n];if(void 0!==o)return o.exports;var i=e[n]={exports:{}},a=!0;try{t[n](i,i.exports,r),a=!1}finally{a&&delete e[n]}return i.exports}(3184);let n=(t,e)=>{if("http"!==t&&"ws"!==t)throw Error("Protocol not supported");return""!==e?"ws"===t?"".concat((r.env.NEXT_PUBLIC_AGENTS_ENDPOINT||"").replace("http","ws"),"/").concat(e):"".concat(r.env.NEXT_PUBLIC_AGENTS_ENDPOINT||"","/").concat(e):"".concat(r.env.NEXT_PUBLIC_AGENTS_ENDPOINT||"")};async function o(t,e,r){let o=await fetch(n("http","upload_file_as_db"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:t,file_name:e,base64_content:r})});if(!o.ok)throw Error("Failed to upload file - are you sure your network is working?");let i=await o.json();return{dbName:i.db_name,dbInfo:i.db_info}}self.onmessage=async t=>{let{type:e,token:r,fileName:n,fileBuffer:i}=t.data;if(console.log("Worker event",t.data),"UPLOAD_FILE"===e)try{let t=function(t){let e="",r=new Uint8Array(t),n=r.byteLength;for(let t=0;t<n;t++)e+=String.fromCharCode(r[t]);return self.btoa(e)}(i),{dbName:e,dbInfo:a}=await o(r,n,t);self.postMessage({type:"UPLOAD_SUCCESS",dbName:e,dbInfo:a})}catch(e){let t={type:"UPLOAD_ERROR",error:e instanceof Error?e.message:String(e)};self.postMessage(t)}}})(),_N_E={}})();